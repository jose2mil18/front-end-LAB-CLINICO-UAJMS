{"version":3,"sources":["webpack:///./src/app/examenes/examenes.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACoB;AAKV,CAAC,UAAU;AAIhE;IAII,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHxC,YAAO,GAAC,EAAE,CAAC;QAED,gBAAW,GAAG,IAAI,gEAAW,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;IAClC,CAAC;IAEzC,gCAAM,GAAN,UAAO,WAAkB,EAAE,sBAA8B;QACrD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,MAAG,EAAE,GAAC,+DAAa,GAAC,2BAA2B,CAAE,GAAC,WAAW,GAAC,0BAA0B,GAAC,sBAAsB,EAAG,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAClL,CAAC;IACD,qCAAW,GAAX;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,MAAG,EAAE,GAAC,+DAAa,GAAC,WAAW,CAAE,EAAG,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAClG,CAAC;IACD,mDAAyB,GAAzB;QAEI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,MAAG,EAAE,GAAC,+DAAa,GAAC,4BAA4B,CAAE,EAAG,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAC1H,CAAC;IACD,mCAAS,GAAT,UAAU,CAAC;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,MAAG,EAAE,GAAC,+DAAa,GAAC,YAAY,CAAE,EAAE,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAEtG,CAAC;IACD,mCAAS,GAAT,UAAU,CAAC;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,MAAG,EAAE,GAAC,+DAAa,GAAC,YAAY,CAAE,EAAE,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAErG,CAAC;IACD,uCAAa,GAAb,UAAc,UAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,MAAG,EAAE,GAAC,+DAAa,GAAC,aAAa,CAAE,GAAC,UAAU,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAC9G,CAAC;IACD,sDAA4B,GAA5B,UAA6B,UAAU,EAAC,oBAAoB;QAExD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAqB,MAAG,EAAE,GAAC,+DAAa,GAAC,wCAAwC,CAAE,EAAE,EAAC,UAAU,cAAE,oBAAoB,wBAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAE/K,CAAC;IAED,+CAAqB,GAArB,UAAsB,QAAgB,EAAE,QAAQ;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,MAAG,EAAE,GAAC,+DAAa,GAAC,+BAA+B,CAAE,EAAE,EAAC,QAAQ,YAAC,QAAQ,YAAC,EAAG,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAC9I,CAAC;IACD,8DAAoC,GAApC,UAAqC,QAAgB,EAAE,QAAQ;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,MAAG,EAAE,GAAC,+DAAa,GAAC,+CAA+C,CAAE,EAAE,EAAC,QAAQ,YAAC,QAAQ,YAAC,EAAG,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;IAC9J,CAAC;IAtCQ,eAAe;QAH3B,gEAAU,CAAC;YACR,UAAU,EAAG,MAAM;SACtB,CAAC;yCAK4B,+DAAU;OAJ3B,eAAe,CAwC3B;IAAD,sBAAC;CAAA;AAxC2B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Usuario, Examen, Area, Institucion, Valor_referencia} from '../models';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport * as global from '../shared/variables_global'; //<== HERE\r\n@Injectable({\r\n    providedIn : 'root'\r\n})\r\nexport class ExamenesService {\r\nusuario={};\r\n  \r\n  private httpHeaders = new HttpHeaders({'Content-Type': 'application/json'});\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll(nombre_area:string, caracter_nombre_examen: string) {\r\n        return this.http.get<Examen[]>(`${''+global.server+'api/examenes?nombre_area='}`+nombre_area+'&caracter_nombre_examen='+caracter_nombre_examen,  {headers: this.httpHeaders});\r\n    }\r\n    getAllAreas() {\r\n        return this.http.get<Area[]>(`${''+global.server+'api/areas'}`,  {headers: this.httpHeaders});\r\n    }\r\n    getInstitucionesConPrecio(){\r\n        \r\n        return this.http.get<Institucion[]>(`${''+global.server+'api/instituciones-examenes'}`,  {headers: this.httpHeaders});\r\n    }\r\n    registrar(e){\r\n        return this.http.post<Examen>(`${''+global.server+'api/examen'}`, e, {headers: this.httpHeaders});\r\n        \r\n    } \r\n    modificar(e){\r\n        return this.http.put<Examen>(`${''+global.server+'api/examen'}`, e, {headers: this.httpHeaders});\r\n        \r\n    }\r\n    obtenerExamen(cod_examen){\r\n        return this.http.get<Examen>(`${''+global.server+'api/examen/'}`+cod_examen, {headers: this.httpHeaders});\r\n    }\r\n    cambiarEstadoValorReferencia(cod_examen,cod_valor_referencia)\r\n    {\r\n        return this.http.post<Valor_referencia[]>(`${''+global.server+'api/cambiar-estado-de-valor-referencia'}`, {cod_examen, cod_valor_referencia}, {headers: this.httpHeaders});\r\n         \r\n    }\r\n    \r\n    subexamensPorCaracter(caracter: string, cod_area) {\r\n        return this.http.post<Examen[]>(`${''+global.server+'api/sub-examenes-por-caracter'}`, {caracter,cod_area},  {headers: this.httpHeaders});\r\n    }\r\n    subexamenesSinSubexamenesPorCaracter(caracter: string, cod_area) {\r\n        return this.http.post<Examen[]>(`${''+global.server+'api/sub-examenes-sin-subexamenes-por-caracter'}`, {caracter,cod_area},  {headers: this.httpHeaders});\r\n    }\r\n    //sub-examenes-por-caracter\r\n}"],"sourceRoot":""}